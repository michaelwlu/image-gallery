{"version":3,"sources":["components/ImageCard.js","components/ImageSearch.js","App.js","index.js"],"names":["ImageCard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","index","key","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","action","type","onChange","target","value","placeholder","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","a","fetch","process","response","json","data","hits","console","log","length","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAyCeA,EAvCG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACbC,EAAOD,EAAMC,KAAKC,MAAM,KAE9B,OACE,yBAAKC,UAAU,8CACb,yBAAKC,IAAKJ,EAAMK,aAAcC,IAAI,GAAGH,UAAU,WAC/C,yBAAKA,UAAU,aACb,yBAAKA,UAAU,0CAAf,YACYH,EAAMO,MAElB,4BACE,4BACE,2CACCP,EAAMQ,OAET,4BACE,+CACCR,EAAMS,WAET,4BACE,2CACCT,EAAMU,SAIb,yBAAKP,UAAU,aACZF,EAAKU,KAAI,SAACC,EAAKC,GAAN,OACR,0BACEC,IAAKD,EACLV,UAAU,4FAFZ,IAIIS,SCDCG,EA9BK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACdC,mBAAS,IADK,mBAC/BC,EAD+B,KACzBC,EADyB,KAQtC,OACE,yBAAKhB,UAAU,iDACb,0BAAMiB,SAPW,SAACC,GACpBA,EAAEC,iBACFN,EAAWE,IAKqBK,OAAO,GAAGpB,UAAU,mBAChD,yBAAKA,UAAU,qDACb,2BACEqB,KAAK,OACLC,SAAU,SAACJ,GAAD,OAAOF,EAAQE,EAAEK,OAAOC,QAClCxB,UAAU,kHACVyB,YAAY,yBAEd,4BACEzB,UAAU,kIACVqB,KAAK,UAFP,cC6BKK,MA7Cf,WAAgB,IAAD,EACeZ,mBAAS,IADxB,mBACNa,EADM,KACEC,EADF,OAEqBd,oBAAS,GAF9B,mBAENe,EAFM,KAEKC,EAFL,OAGWhB,mBAAS,IAHpB,mBAGNiB,EAHM,KAGAC,EAHA,KAoBb,OAfAC,qBAAU,WACR,sBAAC,8BAAAC,EAAA,+EAEwBC,MAAM,gCAAD,OACQC,qCADR,cACmDL,EADnD,kCAF7B,cAEOM,EAFP,gBAKoBA,EAASC,OAL7B,OAKOC,EALP,OAMGX,EAAUW,EAAKC,MACfV,GAAa,GAPhB,kDASGW,QAAQC,IAAR,MATH,yDAAD,KAYC,CAACX,IAGF,yBAAK/B,UAAU,qBACb,kBAAC,EAAD,CACEa,WAAY,SAACE,GACXiB,EAAQjB,OAIVc,GAA+B,IAAlBF,EAAOgB,QACpB,wBAAI3C,UAAU,sCAAd,mBAGD6B,EACC,wBAAI7B,UAAU,sCAAd,cAEA,yBAAKA,UAAU,0BACZ2B,EAAOnB,KAAI,SAACX,GAAD,OACV,kBAAC,EAAD,CAAWc,IAAKd,EAAM+C,GAAI/C,MAAOA,UCpC7CgD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.b7613eb6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ImageCard = ({ image }) => {\r\n  const tags = image.tags.split(',');\r\n\r\n  return (\r\n    <div className=\"max-w-sm rounded overflow-hidden shadow-lg\">\r\n      <img src={image.webformatURL} alt=\"\" className=\"w-full\" />\r\n      <div className=\"px-6 py-4\">\r\n        <div className=\"font-bold text-purple-500 text-xl mb-2\">\r\n          Photo by {image.user}\r\n        </div>\r\n        <ul>\r\n          <li>\r\n            <strong>Views: </strong>\r\n            {image.views}\r\n          </li>\r\n          <li>\r\n            <strong>Downloads: </strong>\r\n            {image.downloads}\r\n          </li>\r\n          <li>\r\n            <strong>Likes: </strong>\r\n            {image.likes}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"px-6 py-4\">\r\n        {tags.map((tag, index) => (\r\n          <span\r\n            key={index}\r\n            className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\"\r\n          >\r\n            #{tag}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageCard;\r\n","import React, { useState } from 'react';\r\n\r\nconst ImageSearch = ({ searchText }) => {\r\n  const [text, setText] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    searchText(text);\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-wsm rounded overflow-hidden my-10 mx-auto\">\r\n      <form onSubmit={handleSubmit} action=\"\" className=\"w-full max-w-sm\">\r\n        <div className=\"flex items-center border-b-2 border-teal-500 py-2\">\r\n          <input\r\n            type=\"text\"\r\n            onChange={(e) => setText(e.target.value)}\r\n            className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\"\r\n            placeholder=\"Search image term...\"\r\n          />\r\n          <button\r\n            className=\"flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded\"\r\n            type=\"submit\"\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageSearch;\r\n","import React, { useState, useEffect } from 'react';\nimport ImageCard from './components/ImageCard';\nimport ImageSearch from './components/ImageSearch';\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState('');\n\n  useEffect(() => {\n    (async () => {\n      try {\n        let response = await fetch(\n          `https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true`\n        );\n        let data = await response.json();\n        setImages(data.hits);\n        setIsLoading(false);\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n  }, [term]);\n\n  return (\n    <div className=\"container mx-auto\">\n      <ImageSearch\n        searchText={(text) => {\n          setTerm(text);\n        }}\n      />\n\n      {!isLoading && images.length === 0 && (\n        <h1 className=\"text-5xl text-center mx-auto mt-32\">No Images Found</h1>\n      )}\n\n      {isLoading ? (\n        <h1 className=\"text-6xl text-center mx-auto mt-32\">Loading...</h1>\n      ) : (\n        <div className=\"grid grid-cols-3 gap-4\">\n          {images.map((image) => (\n            <ImageCard key={image.id} image={image} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}